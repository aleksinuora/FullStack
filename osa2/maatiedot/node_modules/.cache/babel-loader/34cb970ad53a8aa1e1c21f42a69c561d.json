{"ast":null,"code":"var _jsxFileName = \"/home/aleksi/kurssit/FullStack/FullStack/osa2/maatiedot/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dbug = true;\nconst dataHost = 'https://restcountries.com/v3.1/all';\nconst weatherHost = 'https://weatherdbi.herokuapp.com/data/weather/';\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState();\n  const [dataReady, setDataReady] = useState(false);\n  const [filterPhrase, setFilter] = useState('');\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n    if (dbug) console.log(event.target.value);\n  };\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan dataa osoitteesta', dataHost);\n    axios.get(dataHost).then(response => {\n      if (dbug) console.log('löydettiin:');\n      setCountries(response.data);\n      setDataReady(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      filterPhrase: filterPhrase,\n      handleFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), dataReady ? /*#__PURE__*/_jsxDEV(RenderCountries, {\n      countries: countries,\n      filterPhrase: filterPhrase,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}; //komponentit\n\n\n_s(App, \"NnUPJDYRBgjdITe8Hj99Lgr5JUs=\");\n\n_c = App;\n\nconst Filter = props => {\n  if (dbug) console.log('renderöidään filtteri...');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.filterPhrase,\n      onChange: props.handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Filter;\n\nconst RenderCountries = _ref => {\n  let {\n    countries,\n    filterPhrase,\n    setFilter\n  } = _ref;\n  if (dbug) console.log('listataat filtteröidyt maat...', filterPhrase);\n  const fltrdCntrs = countries.filter(country => country.name.common.toLowerCase().includes(filterPhrase.toLowerCase()));\n  const cntrsLength = fltrdCntrs.length;\n  if (dbug) console.log('renderöidään maalista...', fltrdCntrs.length);\n\n  if (dbug) {\n    cntrsLength < 11 ? console.log(fltrdCntrs) : console.log('liikaa maita');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cntrsLength == 1 ? /*#__PURE__*/_jsxDEV(RenderCountry, {\n      country: fltrdCntrs[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this) : cntrsLength > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many countries, try to be more specific\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(CountryNames, {\n      countries: fltrdCntrs,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = RenderCountries;\n\nconst CountryNames = _ref2 => {\n  let {\n    countries,\n    setFilter\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [country.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(country.name.common),\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, country.name.official, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 31\n    }, this))\n  }, void 0, false);\n};\n\n_c4 = CountryNames;\n\nconst RenderCountry = _ref3 => {\n  let {\n    country\n  } = _ref3;\n  if (dbug) console.log('renderöidään yksi maa...');\n  const names = country.name;\n  const nameCommon = names.common;\n  if (dbug) console.log('nimi luettu: ', nameCommon);\n  const capitals = country.capital;\n  const capital = capitals.length > 0 ? capitals[0] : 'none';\n  const population = country.population;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: nameCommon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital: \", capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), \"population: \", population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RenderLanguages, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RenderFlag, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RenderWeather, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c5 = RenderCountry;\n\nconst RenderLanguages = _ref4 => {\n  let {\n    country\n  } = _ref4;\n  if (dbug) console.log('yritetään printata kielet', Object.values(country.languages));\n  const langArr = Object.values(country.languages);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: langArr.map(lang => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: lang\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 28\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = RenderLanguages;\n\nconst RenderFlag = _ref5 => {\n  let {\n    country\n  } = _ref5;\n  const flagUrl = country.flags.png;\n  if (dbug) console.log('haetaan lippu osoitteesta', flagUrl);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: flagUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = RenderFlag;\n\nconst RenderWeather = _ref6 => {\n  _s2();\n\n  let {\n    country\n  } = _ref6;\n  const weatherUrl = weatherHost.concat(country.name.common);\n  if (dbug) console.log('renderöidään säätiedot, osoite:', weatherUrl);\n  const [weather, setWeather] = useState();\n  const [available, setAvailable] = useState(false);\n  useEffect(() => {\n    if (dbug) console.log('haetaan säädataa osoitteesta', weatherUrl);\n    axios.get(weatherUrl).then(response => {\n      if (dbug) console.log('löydettiin säädataa');\n      setWeather(response.json());\n      setAvailable(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", country.capital[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), setAvailable ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No weather data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(RenderWeather, \"YJS99M5dqUL6f839Nc3NewdzfIk=\");\n\n_c8 = RenderWeather;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Filter\");\n$RefreshReg$(_c3, \"RenderCountries\");\n$RefreshReg$(_c4, \"CountryNames\");\n$RefreshReg$(_c5, \"RenderCountry\");\n$RefreshReg$(_c6, \"RenderLanguages\");\n$RefreshReg$(_c7, \"RenderFlag\");\n$RefreshReg$(_c8, \"RenderWeather\");","map":{"version":3,"sources":["/home/aleksi/kurssit/FullStack/FullStack/osa2/maatiedot/src/App.js"],"names":["React","useState","useEffect","axios","dbug","dataHost","weatherHost","App","countries","setCountries","dataReady","setDataReady","filterPhrase","setFilter","handleFilterChange","event","target","value","console","log","get","then","response","data","Filter","props","RenderCountries","fltrdCntrs","filter","country","name","common","toLowerCase","includes","cntrsLength","length","CountryNames","map","official","RenderCountry","names","nameCommon","capitals","capital","population","RenderLanguages","Object","values","languages","langArr","lang","RenderFlag","flagUrl","flags","png","RenderWeather","weatherUrl","concat","weather","setWeather","available","setAvailable","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst dbug = true\nconst dataHost = 'https://restcountries.com/v3.1/all'\nconst weatherHost = 'https://weatherdbi.herokuapp.com/data/weather/'\n\nconst App = () => {\n  const [countries, setCountries] = useState()\n  const [dataReady, setDataReady] = useState(false)\n  const [filterPhrase, setFilter] = useState('')\n  \n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n    if (dbug) console.log(event.target.value)\n  }\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan dataa osoitteesta', dataHost)\n    axios.get(dataHost)\n          .then(response => {\n\n            if (dbug) console.log('löydettiin:')\n\n            setCountries(response.data)\n            setDataReady(true)\n          })\n  }, [])\n\n  return (\n    <div>\n      <Filter filterPhrase={filterPhrase}\n        handleFilterChange={handleFilterChange}/>\n      {(dataReady) ? <RenderCountries countries={countries} filterPhrase={filterPhrase} setFilter={setFilter}/>\n                   : <div></div>}\n    </div>\n  );\n}\n\n//komponentit\n\nconst Filter = (props) => {\n  if (dbug) console.log('renderöidään filtteri...')\n\n  return (\n    <>\n    find countries <input\n      value={props.filterPhrase}\n      onChange={props.handleFilterChange}\n      />\n    </>\n  )\n}\n\nconst RenderCountries = ({ countries, filterPhrase, setFilter }) => {\n  if (dbug) console.log('listataat filtteröidyt maat...', filterPhrase)\n\n  const fltrdCntrs = countries.filter(country => \n                          country.name.common\n                          .toLowerCase()\n                          .includes(filterPhrase.toLowerCase())                           \n                        )\n  const cntrsLength = fltrdCntrs.length\n  \n  if (dbug) console.log('renderöidään maalista...', fltrdCntrs.length)\n  if (dbug) {\n    (cntrsLength < 11) ? console.log(fltrdCntrs)\n                             : console.log('liikaa maita')\n  }\n\n  return (\n    <div>\n      {(cntrsLength == 1)\n        ? <RenderCountry country={fltrdCntrs[0]}/>\n        : (cntrsLength > 10) \n          ? <p>Too many countries, try to be more specific</p>\n          : <CountryNames countries={fltrdCntrs} setFilter={setFilter}/>\n        }\n    </div>\n  ) \n}\n\nconst CountryNames = ({ countries, setFilter }) => {\n  return (\n    <>\n    {countries.map(country => <p key={country.name.official}>\n      {country.name.common}\n      <button onClick={() => setFilter(country.name.common)}>\n        show</button>\n    </p>)}\n    </>\n  )\n}\n\nconst RenderCountry = ({ country }) => {\n  if (dbug) console.log('renderöidään yksi maa...')\n\n  const names = country.name\n  const nameCommon = names.common\n\n  if (dbug) console.log('nimi luettu: ', nameCommon)\n\n  const capitals = country.capital\n  const capital = (capitals.length > 0) ? capitals[0]\n                                        : 'none'\n  const population = country.population\n\n  return (\n    <>\n    <h1>{nameCommon}</h1>\n    <p>\n      capital: {capital}\n      <br/>\n      population: {population}\n    </p>\n    <h2>languages</h2>\n    <RenderLanguages country={country}/>\n    <RenderFlag country={country}/>\n    <RenderWeather country={country}/>\n    </>\n  )\n}\n\nconst RenderLanguages = ({ country }) => {\n  if (dbug) console.log('yritetään printata kielet', Object.values(country.languages))\n\n  const langArr = Object.values(country.languages)\n\n  return (\n    <ul>\n      {langArr.map(lang => <li key={lang}>{lang}</li>)}\n    </ul>\n  )\n}\n\nconst RenderFlag = ({ country }) => {\n  const flagUrl = country.flags.png\n\n  if(dbug) console.log('haetaan lippu osoitteesta', flagUrl)\n\n  return (\n    <img src={flagUrl}/>\n  )\n}\n\nconst RenderWeather = ({ country }) => {\n  const weatherUrl = weatherHost.concat(country.name.common)\n  if (dbug) console.log('renderöidään säätiedot, osoite:', weatherUrl)\n  const [weather, setWeather] = useState()\n  const [available, setAvailable] = useState(false)\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan säädataa osoitteesta', weatherUrl)\n    axios.get(weatherUrl)\n          .then(response => {\n\n            if (dbug) console.log('löydettiin säädataa')\n\n            setWeather(response.json())\n            setAvailable(true)\n          })\n  }, [])\n\n  return (\n    <div>\n      <h2>Weather in {country.capital[0]}</h2>\n      {setAvailable ? <p>{weather}</p>\n                    : <p>No weather data available</p>}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}