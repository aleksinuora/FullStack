{"ast":null,"code":"var _jsxFileName = \"/home/aleksi/kurssit/FullStack/FullStack/osa2/maatiedot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dbug = true;\nconst dataHost = 'https://restcountries.com/v3.1/all';\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState();\n  const [dataReady, setDataReady] = useState(false);\n  const [filterPhrase, setFilter] = useState('');\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n    if (dbug) console.log(event.target.value);\n  };\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan dataa osoitteesta', dataHost);\n    axios.get(dataHost).then(response => {\n      if (dbug) console.log('löydettiin:');\n      setCountries(response.data);\n      setDataReady(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      filterPhrase: filterPhrase,\n      handleFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), dataReady ? /*#__PURE__*/_jsxDEV(RenderCountries, {\n      countries: countries,\n      filterPhrase: filterPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"NnUPJDYRBgjdITe8Hj99Lgr5JUs=\");\n\n_c = App;\n\nconst Filter = props => {\n  if (dbug) console.log('renderöidään filtteri...');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.filterPhrase,\n      onChange: props.handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Filter;\n\nconst RenderCountries = _ref => {\n  let {\n    countries,\n    filterPhrase\n  } = _ref;\n  if (dbug) console.log('listataat filtteröidyt maat...', filterPhrase);\n  const fltrdCntrs = countries.filter(country => country.name.common.toLowerCase().includes(filterPhrase.toLowerCase()));\n  if (dbug) console.log('renderöidään maalista...', fltrdCntrs.length);\n\n  if (dbug) {\n    fltrdCntrs.length < 11 ? console.log(fltrdCntrs) : console.log('liikaa maita');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"kukkuu\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = RenderCountries;\n\nconst RenderCountry = _ref2 => {\n  let {\n    country\n  } = _ref2;\n  if (dbug) console.log('renderöidään yksi maa...');\n  const names = country.name;\n  const nameCommon = names.common;\n  if (dbug) console.log('nimi luettu: ', nameCommon);\n  const capitals = country.capital;\n  const capital = capitals.length > 0 ? capitals[0] : 'none';\n  const population = country.population;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: nameCommon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital: \", capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), \"population: \", population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = RenderCountry;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Filter\");\n$RefreshReg$(_c3, \"RenderCountries\");\n$RefreshReg$(_c4, \"RenderCountry\");","map":{"version":3,"sources":["/home/aleksi/kurssit/FullStack/FullStack/osa2/maatiedot/src/App.js"],"names":["React","useState","useEffect","axios","dbug","dataHost","App","countries","setCountries","dataReady","setDataReady","filterPhrase","setFilter","handleFilterChange","event","target","value","console","log","get","then","response","data","Filter","props","RenderCountries","fltrdCntrs","filter","country","name","common","toLowerCase","includes","length","RenderCountry","names","nameCommon","capitals","capital","population"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst dbug = true\nconst dataHost = 'https://restcountries.com/v3.1/all'\n\nconst App = () => {\n  const [countries, setCountries] = useState()\n  const [dataReady, setDataReady] = useState(false)\n  const [filterPhrase, setFilter] = useState('')\n  \n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n    if (dbug) console.log(event.target.value)\n  }\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan dataa osoitteesta', dataHost)\n    axios.get(dataHost)\n          .then(response => {\n\n            if (dbug) console.log('löydettiin:')\n\n            setCountries(response.data)\n            setDataReady(true)\n          })\n  }, [])\n\n  return (\n    <div>\n      <Filter filterPhrase={filterPhrase}\n        handleFilterChange={handleFilterChange}/>\n      {(dataReady) ? <RenderCountries countries={countries} filterPhrase={filterPhrase}/>\n                   : <div></div>}\n    </div>\n  );\n}\n\nconst Filter = (props) => {\n  if (dbug) console.log('renderöidään filtteri...')\n\n  return (\n    <>\n    find countries <input\n      value={props.filterPhrase}\n      onChange={props.handleFilterChange}\n      />\n    </>\n  )\n}\n\nconst RenderCountries = ({ countries, filterPhrase }) => {\n  if (dbug) console.log('listataat filtteröidyt maat...', filterPhrase)\n\n  const fltrdCntrs = countries.filter(country => \n                          country.name.common\n                          .toLowerCase()\n                          .includes(filterPhrase.toLowerCase())                           \n                        )\n\n  if (dbug) console.log('renderöidään maalista...', fltrdCntrs.length)\n  if (dbug) {\n    (fltrdCntrs.length < 11) ? console.log(fltrdCntrs)\n                             : console.log('liikaa maita')\n  }\n\n  return (\n    <div>\n      kukkuu\n    </div>\n  ) \n}\n\nconst RenderCountry = ({ country }) => {\n  if (dbug) console.log('renderöidään yksi maa...')\n\n  const names = country.name\n  const nameCommon = names.common\n\n  if (dbug) console.log('nimi luettu: ', nameCommon)\n\n  const capitals = country.capital\n  const capital = (capitals.length > 0) ? capitals[0]\n                                        : 'none'\n  const population = country.population\n\n  return (\n    <>\n    <h1>{nameCommon}</h1>\n    <p>\n      capital: {capital}\n      <br/>\n      population: {population}\n    </p>\n    <h2>languages</h2>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}