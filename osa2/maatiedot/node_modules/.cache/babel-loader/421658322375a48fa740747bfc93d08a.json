{"ast":null,"code":"var _jsxFileName = \"/home/aleksi/kurssit/FullStack/FullStack/osa2/maatiedot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dbug = true;\nconst dataHost = 'https://restcountries.com/v3.1/all';\n\nconst Filter = props => {\n  if (dbug) console.log('renderöidään filtteri...');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.filterPhrase,\n      onChange: props.handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Filter;\n\nconst RenderCountries = _ref => {\n  let {\n    countries,\n    filterPhrase\n  } = _ref;\n  if (dbug) console.log('renderöidään maa(t)...');\n  const fltrdCntrs = countries.filter(country => country.name.common.toLowerCase().includes(filterPhrase.toLowerCase));\n  if (dbug) console.log('ensimmäinen maa: ', fltrdCntrs[0].name.common);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(RenderCountry, {\n      country: fltrdCntrs[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = RenderCountries;\n\nconst RenderCountry = _ref2 => {\n  let {\n    country\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", country.capital[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), \"population \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = RenderCountry;\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [dataReady, setDataReady] = useState(false);\n  const [filterPhrase, setFilter] = useState('');\n\n  const handleFilterChange = event => setFilter(event.target.value);\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan dataa osoitteesta', dataHost);\n    axios.get(dataHost).then(response => {\n      if (dbug) console.log('löydettiin:', response.data);\n      setCountries(response.data);\n      setDataReady(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      filterPhrase: filterPhrase,\n      handleFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), dataReady ? /*#__PURE__*/_jsxDEV(RenderCountries, {\n      countries: countries,\n      filterPhrase: filterPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9XGksuY7GcGy9G3vNGAN+nzxvsY=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"RenderCountries\");\n$RefreshReg$(_c3, \"RenderCountry\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/aleksi/kurssit/FullStack/FullStack/osa2/maatiedot/src/App.js"],"names":["React","useState","useEffect","axios","dbug","dataHost","Filter","props","console","log","filterPhrase","handleFilterChange","RenderCountries","countries","fltrdCntrs","filter","country","name","common","toLowerCase","includes","RenderCountry","capital","population","App","setCountries","dataReady","setDataReady","setFilter","event","target","value","get","then","response","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst dbug = true\nconst dataHost = 'https://restcountries.com/v3.1/all'\n\nconst Filter = (props) => {\n  if (dbug) console.log('renderöidään filtteri...')\n\n  return (\n    <>\n    find countries <input\n      value={props.filterPhrase}\n      onChange={props.handleFilterChange}\n      />\n    </>\n  )\n}\n\nconst RenderCountries = ({ countries, filterPhrase }) => {\n  if (dbug) console.log('renderöidään maa(t)...')\n\n  const fltrdCntrs = countries.filter(country =>\n                        country.name.common.toLowerCase()\n                          .includes(filterPhrase.toLowerCase))\n\n  if (dbug) console.log('ensimmäinen maa: ', fltrdCntrs[0].name.common)\n\n  return (\n    <div>\n      <RenderCountry country={fltrdCntrs[0]} />\n    </div>\n  ) \n}\n\nconst RenderCountry = ({ country }) => {\n  return (\n    <>\n    <h1>{country.name.common}</h1>\n    <p>\n      capital {country.capital[0]}\n      <br/>\n      population {country.population}\n    </p>\n    <h2>languages</h2>\n    </>\n  )\n}\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [dataReady, setDataReady] = useState(false)\n  const [filterPhrase, setFilter] = useState('')\n  \n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  useEffect(() => {\n    if (dbug) console.log('haetaan dataa osoitteesta', dataHost)\n    axios.get(dataHost)\n          .then(response => {\n            if (dbug) console.log('löydettiin:', response.data)\n            setCountries(response.data)\n            setDataReady(true)\n          })\n  }, [])\n\n  return (\n    <div>\n      <Filter filterPhrase={filterPhrase}\n        handleFilterChange={handleFilterChange}/>\n      {(dataReady) ? <RenderCountries countries={countries} filterPhrase={filterPhrase}/>\n                   : <div></div>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}